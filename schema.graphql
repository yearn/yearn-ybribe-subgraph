
type EthTx @entity {
  " Transaction hash + Log Index "
  id: ID!
  " Log index related to the event. A Transaction might contain multiple events "
  logIndex: BigInt!
  " The transaction sender "
  from: Bytes!
  " Gas price used in the transaction "
  gasPrice: BigInt!
  " Gas limit used in the transaction "
  gasLimit: BigInt!
  " Transaction hash "
  hash: Bytes!
  " The transaction index "
  index: BigInt!
  " Address that received the transaction "
  to: Bytes!
  " Ether value sent in the transaction "
  value: BigInt!
  " Timestamp when the transaction was executed "
  timestamp: BigInt!
  " Gas limit used in the current block "
  blockGasLimit: BigInt!
  " Block number "
  blockNumber: BigInt!
}

type BribeV3 @entity {
  id: ID!
  description: String!
  numberValue: BigInt
  stringValue: String
  addressValue: Bytes
}

type Gauge @entity {
  id: ID!
  address: Bytes!
  rewards: [GaugeReward!]! @derivedFrom(field: "gauge")
}

type GaugeReward @entity {
  " Gauge + Reward Token "
  id: ID!
  briber: Account!
  gauge: Gauge!
  reward: Token!
  amount: BigInt!
  period: BigInt!
  feeTokens: [FeeToken!]! @derivedFrom(field: "from")
  " Timestamp when the transaction was executed "
  timestamp: BigInt!
  " Block number "
  blockNumber: BigInt!
  " The Ethereum transaction where the rewards were added "
  rewardsAddedAt: EthTx!
}

type FeeToken @entity {
  " Gauge + Reward Token as GaugeReward id "
  id: ID!
  from: GaugeReward!
  token: Token!
  amount: BigInt!
}

type Fee @entity {
  " Token "
  id: ID!
  token: Token!
  total: BigInt!
  fees: [FeeToken!]!
}

type Token @entity {
  id: ID!
  decimals: Int!
  name: String!
  symbol: String!
}

## A user, briber
type Account @entity {
  id: ID!
  isBlacklisted: Boolean!
  claims: [RewardTokenClaim!]! @derivedFrom(field: "account")
  createdAt: EthTx!
}

type RewardTokenClaim @entity {
  id: ID!
  gaugeReward: GaugeReward!
  account: Account!
  amount: BigInt!
}

type RewardRecipient @entity {
  " User (account) wallet address "
  id: ID!
  account: Account!
  recipient: Account!
}

type GaugePeriod @entity {
  " Gauge + Period "
  id: ID!
  gauge: Gauge!
  period: BigInt!
  bias: BigInt!
  blacklistedBias: BigInt!
}

type TotalTokenBribe @entity {
  " Token Address "
  id: ID!
  bribe: Token!
  amount: BigInt!
  claimed: BigInt!
}